package com.fortune.app.user.controller;

import com.fortune.app.user.dto.OauthDto;
import com.fortune.app.user.service.OauthService;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/api/oauth")
public class OauthController {

    private final OauthService oauthService;

    public OauthController(OauthService oauthService) {
        this.oauthService = oauthService;
    }

    @PostMapping
    public ResponseEntity<OauthDto> createOauth(@RequestBody OauthDto dto) {
        return ResponseEntity.status(HttpStatus.CREATED).body(oauthService.createOauth(dto));
    }

    @PatchMapping("/{id}")
    public ResponseEntity<OauthDto> updateOauth(@PathVariable("id") Long oauthId,
                                                @RequestBody OauthDto dto) {
        OauthDto updatedOauth = oauthService.updateOauth(oauthId, dto);
        return ResponseEntity.status(HttpStatus.OK).body(updatedOauth);
    }

    @GetMapping("/{id}")
    public ResponseEntity<OauthDto> getOauth(@PathVariable("id") Long oauthId) {
        OauthDto oauth = oauthService.getOauth(oauthId);
        return ResponseEntity.status(HttpStatus.OK).body(oauth);
    }

    @DeleteMapping("/{id}")
    public ResponseEntity<Void> deleteOauth(@PathVariable("id") Long oauthId) {
        oauthService.deleteOauth(oauthId);
        return ResponseEntity.status(HttpStatus.NO_CONTENT).build();
    }
}
